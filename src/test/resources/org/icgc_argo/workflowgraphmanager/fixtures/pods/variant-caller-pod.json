{
  "apiVersion": "v1",
  "kind": "Pod",
  "metadata": {
    "annotations": {
      "container.apparmor.security.beta.kubernetes.io/workflow-graph-node": "runtime/default",
      "kubernetes.io/psp": "restricted",
      "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
    },
    "creationTimestamp": "2021-02-12T17:31:29Z",
    "generateName": "variant-caller-node-workflow-graph-node-86cf986995-",
    "labels": {
      "app.kubernetes.io/instance": "variant-caller-node",
      "app.kubernetes.io/name": "workflow-graph-node",
      "common.org.icgc.argo/type": "workflow-graph",
      "pod-template-hash": "86cf986995",
      "workflow-graph.org.icgc.argo/app": "workflow-graph-node",
      "workflow-graph.org.icgc.argo/node-id": "variant-caller-node",
      "workflow-graph.org.icgc.argo/pipeline-id": "test-pipeline"
    },
    "name": "variant-caller-node-workflow-graph-node-86cf986995-c5gvk",
    "namespace": "test",
    "ownerReferences": [
      {
        "apiVersion": "apps/v1",
        "blockOwnerDeletion": true,
        "controller": true,
        "kind": "ReplicaSet",
        "name": "variant-caller-node-workflow-graph-node-86cf986995",
        "uid": "3bbbf1bd-b5cf-4e74-a481-4680a2ad6cbb"
      }
    ],
    "resourceVersion": "177715267",
    "selfLink": "/api/v1/namespaces/test/pods/variant-caller-node-workflow-graph-node-86cf986995-c5gvk",
    "uid": "16dcaac3-fb25-4f31-b059-03aee0c93a91"
  },
  "spec": {
    "containers": [
      {
        "env": [
          {
            "name": "SERVER_PORT",
            "value": "8080"
          },
          {
            "name": "MANAGEMENT_PORT",
            "value": "8081"
          },
          {
            "name": "RDPC_URL",
            "value": "http://rdpc-gateway.test/graphql"
          },
          {
            "name": "RABBIT_ENDPOINTS_STANDALONE_HOST",
            "value": "wfg-rabbit-rabbitmq-headless.test"
          },
          {
            "name": "NODE_JSONCONFIGPATH",
            "value": "/srv/node-config/node-config.json"
          },
          {
            "name": "LOG4J2_KAFKA_BROKERS",
            "value": "kafka-headless:9092"
          },
          {
            "name": "LOGGING_LEVEL_ORG_ICGC_ARGO_WORKFLOWGRAPHNODE",
            "value": "DEBUG"
          },
          {
            "name": "OAUTH_CLIENTCREDENTIALS_CLIENTID",
            "value": "wfg"
          },
          {
            "name": "OAUTH_CLIENTCREDENTIALS_PUBLICKEYURI",
            "value": "https://ego.qa.argo.cancercollaboratory.org/api/oauth/token/public_key"
          },
          {
            "name": "OAUTH_CLIENTCREDENTIALS_TOKENURI",
            "value": "https://ego.qa.argo.cancercollaboratory.org/api/oauth/token"
          },
          {
            "name": "RABBIT_SCHEMA_REGISTRYURL",
            "value": "http://registry.test"
          },
          {
            "name": "SPRING_PROFILES_ACTIVE",
            "value": "registry,oauth,kafka"
          },
          {
            "name": "RABBIT_ENDPOINTS_STANDALONE_USERNAME",
            "valueFrom": {
              "secretKeyRef": {
                "key": "username",
                "name": "wfg-rabbit-rabbitmq-admin"
              }
            }
          },
          {
            "name": "RABBIT_ENDPOINTS_STANDALONE_PASSWORD",
            "valueFrom": {
              "secretKeyRef": {
                "key": "password",
                "name": "wfg-rabbit-rabbitmq-admin"
              }
            }
          },
          {
            "name": "OAUTH_CLIENTCREDENTIALS_CLIENTSECRET",
            "valueFrom": {
              "secretKeyRef": {
                "key": "secret",
                "name": "wfg-node-client-secret"
              }
            }
          }
        ],
        "image": "ghcr.io/icgc-argo/workflow-graph-node:0.4.0",
        "imagePullPolicy": "IfNotPresent",
        "livenessProbe": {
          "failureThreshold": 1,
          "httpGet": {
            "path": "/actuator/health",
            "port": 8080,
            "scheme": "HTTP"
          },
          "initialDelaySeconds": 60,
          "periodSeconds": 8,
          "successThreshold": 1,
          "timeoutSeconds": 2
        },
        "name": "workflow-graph-node",
        "ports": [
          {
            "containerPort": 8080,
            "name": "http",
            "protocol": "TCP"
          }
        ],
        "readinessProbe": {
          "failureThreshold": 2,
          "httpGet": {
            "path": "/actuator/health",
            "port": 8080,
            "scheme": "HTTP"
          },
          "initialDelaySeconds": 30,
          "periodSeconds": 3,
          "successThreshold": 1,
          "timeoutSeconds": 2
        },
        "resources": {},
        "securityContext": {
          "allowPrivilegeEscalation": false,
          "capabilities": {
            "drop": [
              "ALL"
            ]
          }
        },
        "terminationMessagePath": "/dev/termination-log",
        "terminationMessagePolicy": "File",
        "volumeMounts": [
          {
            "mountPath": "/srv/node-config",
            "name": "variant-caller-node-workflow-graph-node-config"
          },
          {
            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
            "name": "variant-caller-node-workflow-graph-node-token-7d4n6",
            "readOnly": true
          }
        ]
      }
    ],
    "dnsPolicy": "ClusterFirst",
    "enableServiceLinks": true,
    "nodeName": "k8s-node-rdpc-dev-2",
    "priority": 0,
    "restartPolicy": "Always",
    "schedulerName": "default-scheduler",
    "securityContext": {
      "fsGroup": 1,
      "runAsGroup": 9999,
      "runAsNonRoot": true,
      "runAsUser": 9999,
      "supplementalGroups": [
        1
      ]
    },
    "serviceAccount": "variant-caller-node-workflow-graph-node",
    "serviceAccountName": "variant-caller-node-workflow-graph-node",
    "terminationGracePeriodSeconds": 30,
    "tolerations": [
      {
        "effect": "NoExecute",
        "key": "node.kubernetes.io/not-ready",
        "operator": "Exists",
        "tolerationSeconds": 300
      },
      {
        "effect": "NoExecute",
        "key": "node.kubernetes.io/unreachable",
        "operator": "Exists",
        "tolerationSeconds": 300
      }
    ],
    "volumes": [
      {
        "configMap": {
          "defaultMode": 420,
          "items": [
            {
              "key": "variant-caller-node-config.json",
              "path": "node-config.json"
            }
          ],
          "name": "variant-caller-node"
        },
        "name": "variant-caller-node-workflow-graph-node-config"
      },
      {
        "name": "variant-caller-node-workflow-graph-node-token-7d4n6",
        "secret": {
          "defaultMode": 420,
          "secretName": "variant-caller-node-workflow-graph-node-token-7d4n6"
        }
      }
    ]
  },
  "status": {
    "conditions": [
      {
        "lastProbeTime": null,
        "lastTransitionTime": "2021-02-12T17:31:29Z",
        "status": "True",
        "type": "Initialized"
      },
      {
        "lastProbeTime": null,
        "lastTransitionTime": "2021-02-12T17:32:03Z",
        "status": "True",
        "type": "Ready"
      },
      {
        "lastProbeTime": null,
        "lastTransitionTime": "2021-02-12T17:32:03Z",
        "status": "True",
        "type": "ContainersReady"
      },
      {
        "lastProbeTime": null,
        "lastTransitionTime": "2021-02-12T17:31:29Z",
        "status": "True",
        "type": "PodScheduled"
      }
    ],
    "containerStatuses": [
      {
        "containerID": "docker://ec6fd66786c15b167976a2ca8dbe6c47ea848b7ca53ca5816047df6d7b14cb61",
        "image": "ghcr.io/icgc-argo/workflow-graph-node:0.4.0",
        "imageID": "docker-pullable://ghcr.io/icgc-argo/workflow-graph-node@sha256:ead44450e88e6232a47417dc6f3cd16e305d1341d11076cad7908c1d4323da98",
        "lastState": {},
        "name": "workflow-graph-node",
        "ready": true,
        "restartCount": 0,
        "started": true,
        "state": {
          "running": {
            "startedAt": "2021-02-12T17:31:31Z"
          }
        }
      }
    ],
    "hostIP": "10.10.0.119",
    "phase": "Running",
    "podIP": "10.233.120.222",
    "podIPs": [
      {
        "ip": "10.233.120.222"
      }
    ],
    "qosClass": "BestEffort",
    "startTime": "2021-02-12T17:31:29Z"
  }
}